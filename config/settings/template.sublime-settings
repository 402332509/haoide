{
    "template": {
        "Aura": {
            "Application": {
                "extension": ".app",
                "body": "<aura:application>\n    \n</aura:application>",
                "children": ["Controller", "Helper", "Style", "Documentation", "Renderer", "Design", "SVG"]
            },

            "Component": {
                "extension": ".cmp",
                "body": "<aura:component>\n    \n</aura:component>",
                "children": ["Controller", "Helper", "Style", "Documentation", "Renderer", "Design", "SVG"]
            },

            "Interface": {
                "extension": ".intf",
                "body": "<aura:interface description=\"Interface template\">\n    <aura:attribute name=\"example\" type=\"String\" default=\"\" description=\"An example attribute.\"/>\n</aura:interface>",
                "children": []
            },

            "Event": {
                "extension": ".evt",
                "body": "<aura:event type=\"APPLICATION\" description=\"Event template\" />",
                "children": []
            }
        },

        "AuraElement": {
            "Controller": {
                "extension": ".js",
                "body": "({\n    myAction : function(component, event, helper) {\n    \n    }\n})"
            },

            "Helper": {
                "extension": ".js",
                "body": "({\n    helperMethod : function() {\n    \n    }\n})"
            },

            "Style": {
                "extension": ".css",
                "body": ".THIS {}"
            },

            "Documentation": {
                "extension": ".auradoc",
                "body": "<aura:documentation>\n    <aura:description>Documentation</aura:description>\n    <aura:example name=\"ExampleName\" ref=\"exampleComponentName\" label=\"Label\">\n        Example Description\n    </aura:example>\n</aura:documentation>"
            },

            "Renderer": {
                "extension": ".js",
                "body": "({\n    // Your renderer method overrides go here\n})"
            },

            "Design": {
                "extension": ".design",
                "body": "<design:component>\n    \n</design:component>"
            },

            "SVG": {
                "extension": ".svg",
                "body": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg width=\"120px\" height=\"120px\" viewBox=\"0 0 120 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <path d=\"M120,108 C120,114.6 114.6,120 108,120 L12,120 C5.4,120 0,114.6 0,108 L0,12 C0,5.4 5.4,0 12,0 L108,0 C114.6,0 120,5.4 120,12 L120,108 L120,108 Z\" id=\"Shape\" fill=\"#2A739E\"/>\n        <path d=\"M77.7383308,20 L61.1640113,20 L44.7300055,63.2000173 L56.0543288,63.2000173 L40,99.623291 L72.7458388,54.5871812 L60.907727,54.5871812 L77.7383308,20 Z\" id=\"Path-1\" fill=\"#FFFFFF\"/>\n    </g>\n</svg>"
            }
        },

        "ApexClass": {
            "Utility Class": {
                "extension": ".cls",
                "description": "Utilities for invoker",
                "body": "public with sharing class class_name {\n    \n}"
            },
            "Batch Class": {
                "extension": ".cls",
                "description": "Batch Class Template",
                "body": "global class class_name implements Database.Batchable<sObject> {\n    public String query;\n    \n    global class_name() {\n    this.query = query;\n    }\n    \n    global Database.QueryLocator start(Database.BatchableContext bc) {\n    return Database.getQueryLocator(query);\n    }\n    \n    global void execute(Database.BatchableContext BC, list<Sobject> scope) {}\n\n    global void finish(Database.BatchableContext BC) {}\n}"
            },
            "Controller": {
                "extension": ".cls",
                "description": "Custom Controller",
                "body": "public with sharing class class_name {\n    public class_name() {\n\n    }\n}"
            },
            "StandardController Extension": {
                "extension": ".cls",
                "description": "Extension for StandardController",
                "body": "public with sharing class class_name {\n    public class_name(ApexPages.StandardController con) {\n\n    }\n}"
            },
            "StandardSetController Extension": {
                "extension": ".cls",
                "description": "Extension for StandardSetController",
                "body": "public with sharing class class_name {\n    public class_name(ApexPages.StandardSetController con) {\n\n    }\n}"
            },
            "Schedule Class": {
                "extension": ".cls",
                "description": "Schedule Class Template",
                "body": "global class class_name implements Schedulable {\n    global void execute(SchedulableContext sc) {\n\n    }\n}"
            },
            "Exception Class": {
                "extension": ".cls",
                "description": "Exception Class",
                "body": "public class class_name extends Exception {}"
            },
            "Test Class": {
                "extension": ".cls",
                "description": "Exception Class",
                "body": "@isTest\nprivate class class_name {\n    \n}"
            }
        },

        "ApexTrigger": {
            "Basic": {
                "extension": ".trigger",
                "description": "Trigger Template",
                "body": "trigger trigger_name on sobject_name(before insert) {\n\n}"
            }
        },
        "ApexComponent": {
            "Basic": {
                "extension": ".component",
                "description": "component Template",
                "body": "<apex:component>\n    \n</apex:component>"
            }
        },
        "ApexPage": {
            "Basic": {
                "extension": ".page",
                "description": "Visualforce Page Template",
                "body": "<apex:page>\n    \n</apex:page>"
            }
        }
    }
}